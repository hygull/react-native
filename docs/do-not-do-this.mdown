#### (1) Do not do this otherwise(StaticRenderer.render():A Valid React element must be returned)

```javascript
				<ListView
					dataSource = {props.dataSource} 
					renderRow = {
						(rowData) => {
							<Text style={styles.users}>
									{rowData}
							</Text>	 
						}
					}
				/>
```

#### Do this (by removing the curly braces)

```javascript
				<ListView
					dataSource = {props.dataSource} 
					renderRow = {
						(rowData) => 
							<Text style={styles.users}>
									{rowData}
							</Text>	 
						
					}
				/>
```

#### (2) Do not do this otherwise(_reactNative2.default.create is not a function)

```javascript
import StyleSheet from "react-native" 
```

#### Do this

```javascript
import {StyleSheet} from "react-native" 
```

#### (3) Don't do this otherwise(This is not allowed before super)

```javascript
	constructor(){
		this.state = {
			switchValue:false
		}
	}
```

#### Do this

```javascript
	constructor(){
		super()
		this.state = {
			switchValue:false
		}
	}
```

#### (4) Do not do this otherwise(Cannot call a class as a function)

```typescript
		const ds =  ListView.DataSource({rowHasChanged: (r1, r2) => r1!==r2})
```

#### Do this

```typescript
		const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1!==r2})
```

#### Don't do this (while specifying styles in other file)

```javascript
import {StyleSheet} from "react-native" 

const styles = StyleSheet.create({
	  container: {
	    // flex: 1,
	    // justifyContent: 'center',
	    alignItems: 'center',
	    backgroundColor: '#e6fff2',
	  },
	  welcome: {
	    fontSize: 20,
	    textAlign: 'center',
	    margin: 10,
	  },
 });
```

#### Do this

```javascript
import {StyleSheet} from "react-native" 

export default StyleSheet.create({
	  container: {
	    // flex: 1,
	    // justifyContent: 'center',
	    alignItems: 'center',
	    backgroundColor: '#e6fff2',
	  },
	  welcome: {
	    fontSize: 20,
	    textAlign: 'center',
	    margin: 10,
	  },
 });
```

#### Do not do this(ScrollView) otherwise (Warning)
```javascript

export default ScrollViewComponent = (props) =>  {
			const getUsersEach = (user) => (
				<Text style={styles.text}>
					{user.name}
				</Text>
			)	

		
			return (
				<View>
					<ScrollView>
						{ props.persons.map(getUsersEach) }
					</ScrollView>
				</View>
			)
		
	
} 
```

#### Do this - (if you will forget to specify key attribute then it will cause the warning message)

```
export default ScrollViewComponent = (props) =>  {
			const getUsersEach = (user) => (
				<Text key={user.age} style={styles.text}>
					{user.name}
				</Text>
			)	

		
			return (
				<View>
					<ScrollView>
						{ props.persons.map(getUsersEach) }
					</ScrollView>
				</View>
			)
		
	
} 
```

#### iOS platform does not support (Warning if used)

```javascript
				<TouchableNativeFeedback>
					<Text> Hello - TouchableNativeFeedback</Text>
				</TouchableNativeFeedback>
```

#### Do not do this otherwise (Warning)

```javascript
	render() {
		return (
			<View style={styles.view}>
				<TouchableHighlight>
					<Text> Hello - TouchableHighlight </Text>
				</TouchableHighlight>
				<TouchableOpacity>
					<Text> Hello - TouchableOpacity</Text>
				</TouchableOpacity>

				<TouchableWithoutFeedback>
					<Text>Hello - TouchableWithoutFeedback </Text>
				</TouchableWithoutFeedback>
			</View>
		)
	} 
```

#### Do this (wrap Text children inside View as warning says this, check it)

```javascript
	render() {
		return (
			<View style={styles.view}>
				<TouchableHighlight>
					<Text> Hello - TouchableHighlight </Text>
				</TouchableHighlight>
				<TouchableOpacity>
					<Text> Hello - TouchableOpacity</Text>
				</TouchableOpacity>

				<TouchableWithoutFeedback>
					<View><Text>Hello - TouchableWithoutFeedback </Text></View>
				</TouchableWithoutFeedback>
			</View>
		)
	} 
```